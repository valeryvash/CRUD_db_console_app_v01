package util;

import java.sql.*;

/**
 * Singleton usage is not a good idea.
 * Summary:
 * Many DB drivers are not-thread-safe.
 * Singleton usage leads to a bad design.
 * See a link below
 * https://stackoverflow.com/questions/6507687/should-a-db-connection-be-a-singleton
 * And second link:
 * https://puredanger.github.io/tech.puredanger.com/2007/07/03/pattern-hate-singleton/
 *
 * @author valeryvash
 * If I will use one connection for different threads, it can create an error statement
 */
public class PreparedStatementProvider {
    private static final String DB_URL = "jdbc:mysql://localhost/task_schema?";
    private static final String USER_PASS = "user=root&password=root";

    private static Connection connection = null;

    static {
        try {
            connection = DriverManager.getConnection(DB_URL + USER_PASS);
        } catch (SQLException e) {
            e.printStackTrace();
        } finally {
            try {
                if (connection != null) {
                    connection.close();
                }
            } catch (SQLException e) {
                e.printStackTrace();
            }
        }
    }

    private PreparedStatementProvider() {}

    private static Connection getConnection() throws SQLException {
        if (connection == null || connection.isClosed()) {
            return DriverManager.getConnection(DB_URL + USER_PASS);
        } else {
            return connection;
        }
    }

    public static PreparedStatement prepareStatement(String sql) throws SQLException {
        connection = getConnection();
        setAutoCommitModeOn();
        return connection.prepareStatement(sql);
    }

    public static PreparedStatement prepareStatement(String sql, int autoGeneratedKeys) throws SQLException {
        connection = getConnection();
        setAutoCommitModeOn();
        return connection.prepareStatement(sql, autoGeneratedKeys);
    }

    private static void setAutoCommitModeOn() {
        try {
            if (!connection.getAutoCommit()){
                connection.setAutoCommit(true);
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }



}
